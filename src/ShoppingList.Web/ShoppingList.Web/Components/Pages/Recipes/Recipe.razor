@inherits MessageComponentBase
@inject NavigationManager nav
@inject IUserAccessor userAccessor
@inject IMediator mediator

@attribute [AllowAnonymous]
@page "/recipe/{RecipeId:int}"

<PageTitle>@recipeDetails.Name</PageTitle>

<h4>@recipeDetails.Name</h4>
@if (userAccessor.IsAuthenticated)
{
    <CreateShoppingListFromRecipeButton RecipeId="RecipeId" />
    <MarkRecipeAsFavoriteButton
        RecipeId="RecipeId"
        MarkedAsFavorite="recipeDetails.MarkedAsFavorite"
        OnMarkedAsFavorite="OnMarkedAsFavorite" />
}
<div class="message">@message</div>

<p>@recipeDetails.Description</p>

@foreach (var ingredient in recipeDetails.Ingredients)
{
    <div class="ingredient">
        <p>@ingredient.Name</p>
        @ingredient.Description
        @($"{ingredient.Amount} {ingredient.Unit}")
    </div>
}

@code {
    [Parameter] public int RecipeId { get; set; }
    private RecipeDetails recipeDetails = new();

    protected override async Task OnInitializedAsync()
    {
        recipeDetails = await mediator.Send(new FindRecipeQuery(RecipeId));
    }

    private void OnMarkedAsFavorite()
    {
        var message = recipeDetails.MarkedAsFavorite
            ? "Usunięto przepis z ulubionych."
            : "Dodano przepis do ulubionych.";

        recipeDetails.MarkedAsFavorite = !recipeDetails.MarkedAsFavorite;

        _ = ShowMessage(message);
    }
}